2023-03-17(금)

(1) 선생님의 인생 치트키는 인사와 사과와 감사이다.
- 평상시에 인사를 잘 하면 많은 것을 용서받을 수 있다!
- 근데 귀여우면 꾸벅만 하면 된다! 안귀여우면 인사 잘 하자
- 미안하면 사과의 말을 고마우면 감사인사를 잘 하자

(2) 깃허브
- Repository: 원격 저장소
- init: 초기화, 내 프로젝트를 깃으로 기록하려고 하는 절차
- add: 내가 기록할 파일들만 기록될 수 있도록 추가
- commit: 실제 기록. 커밋은 커밋 메세지가 있어야 함. 이름과 이메일을 기록
- push: commit 한 기록들을 원격 저장소에 올림
- Github Page: 

(3) 유저 정보 등록하기 (터미널 창에서)
- 내 컴퓨터일 때
  - git config --global user.name "유저이름" 
  - git config --global user.email 유저메일주소
- 내 프로젝트에서만 유저 정보를 등록해야 할 때
  - git config --local user.name "유저이름"
  - git config --local user.email 유저메일주소


2023-03-21(화)
(1) remotes에 원격 저장소 추가하기 (remotes 의 '+' => origin 입력 => 레포지토리 주소 복사 => )
(2) 구역을 나누는 태그 <div>
(3) ul과 li를 편리하게 쓰는 법 => ul>li*n (n은 리스트 목록 개수)
(4) img 태그의 alt 속성에 이미지가 보이지 않을 때의 대체 텍스트를 지정한다.
(5) 속성="값" 은 띄어쓰기 하지 않는다. 
(6) input
- name은 input 태그의 변수명과 같다.
- text: text 작성
- password: 비밀번호 작성란
- checkbox: 체크박스
- radio: 중복 선택이 불가능한 체크박스
  - radio가 중복 선택이 되지 않게 하려면 radio 버튼의 name이 같아야 함 

2023-03-24(금)
(1) h1~h6 태그: 1~6까지 있고, 1이 가장 크고 6이 가장 작다
(2) a태그: href 속성에 주소를 입력하면 a태그 사이에 있는 것을 클릭하였을 때 주소로 이동
    - a는 anchor의 약자
(3) markdown: html의 문서 꾸밈 태그들을 축약한 것들
(4) id는 고유한 값으로 한 개만 지정, class는 분류

2023-05-16(화)
= display flex =
(1) justify-content: 기본축으로 정렬
- flex-start: 요소들을 컨테이너의 왼쪽으로 정렬
- flex-end: 요소들을 컨테이너의 오른쪽으로 정렬
- center: 요소들을 컨테이너의 가운데로 정렬
- space-between: 요소들 사이에 동일한 간격을 둠
- space-around: 요소들 주위에 동일한 간격을 둠

(2) align-item: 교차축으로 정렬
flex-start: 요소들을 컨테이너의 위쪽으로 정렬
flex-end: 요소들을 컨테이너의 아래쪽으로 정렬합니다
center: 요소들을 컨테이너의 교차축의 가운데로 정렬
baseline: 요소들을 컨테이너의 베이스라인에 정렬 (영어)
stretch: 요소들을 컨테이너에 맞도록 늘림

(3) flex-direction: 속성에 따라 기본축과 교차축이 바뀔 수 있음
- row: 요소들을 텍스트의 방향과 동일하게 정렬합니다
- row-reverse: 요소들을 텍스트의 반대 방향으로 정렬합니다(시작과 끝 반대)
- column: 요소들을 위에서 아래로 정렬 (기본축 반대)
- column-reverse: 요소들을 아래에서 위로 정렬 (기본축, 시작과 끝 반대)

(4) order
- order의 기본 값은 0이며, 양수나 음수로 바꿀 수 있다
- 양수가 오른쪽, 음수가 왼쪽

(5) align-self
- 개별적 요소에 적용할 수 있는 또 다른 속성
- align-items가 사용하는 값들을 인자로 받음
- 지정한 요소에만 적용 (컨테이너 X)

(6) flex-wrap
- nowrap: 모든 요소를 한 줄에 정렬
- wrap: 요소들을 여러 줄에 걸쳐 정렬
- wrap-reverse: 요소들을 여러 줄에 걸쳐 정렬(방향 반대)

(7) flex-flow
- flex-direction과 flex-wrap 이 같이 사용되기 때문에
- 공백 문자를 이용하여 두 속성의 값을 인자로 받음 
- flex-flow: row wrap;

(8) align-content: 여러 줄들 사이의 간격을 지정 (기본값 stretch)
- flex-start: 여러 줄들을 컨테이너의 위쪽에 정렬
- flex-end: 여러 줄들을 컨테이너 아래쪽에 정렬
- center: 여러 줄들을 컨테이너 가운데에 정렬
- space-between: 여러 줄들 사이에 동일한 간격을 둠
- space-around: 여러 줄들 주위에 동일한 간격을 둠
- stretch: 여러 줄들을 컨테이너에 맞도록 늘림

= figma = 
(1) auto layout: 그룹화랑 비슷한데 더 유연하게 요소를 배열
- 각각 텍스트의 배열을 버튼화 한다고 이해하면 편합

2023-05-19 (금)
(1) 아이콘들은 svg 로 사용한다 (벡터 이미지를 사용하여 깨지지 않게)
(2) 하나의 요소를 클릭하고 alt를 누른 뒤 간격을 알고 싶은 요소에 마우스를 올려 놓으면 간격을 알 수 있다

2023-06-01
(1) Feather Icons
- script src 를 head에 복사, i 태그로 아이콘 가져오기, 마지막에 feather.replace() 꼭 써주기
(2) Bootstrap Icons
- link 를 head에 복사, i 태그로 아이콘 가져오기
(3) rem 
- 1rem = 16px = 대문자 M의 너비
- pixel = 화소
(4) media query
- @media screen and (max-width: 540px): max-width 가 540보다 작으면 적용